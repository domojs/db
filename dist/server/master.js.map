{"version":3,"sources":["master.ts"],"names":[],"mappings":"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","file":"master.js","sourcesContent":["import * as di from 'akala-core';\r\nimport * as redis from 'redis';\r\nimport * as debug from 'debug';\r\nimport { Settings } from '../../../settings';\r\nimport { EventEmitter } from 'events';\r\nvar log = debug('domojs:db');\r\n\r\nexport interface DbClient extends redis.RedisClient\r\n{\r\n    _persistent: boolean;\r\n    another(): DbClient;\r\n    quit(args?: any[], callback?: redis.ResCallbackT<any>): boolean;\r\n    on(event: string, handler: Function);\r\n    osort(key: string, columns: string[], sortKey: string, start: number, count: number, callback: redis.ResCallbackT<any[]>): void;\r\n    osort(key: string, columns: string[], sortKey: string, callback: redis.ResCallbackT<any[]>): void;\r\n    osort(key: string, columns: string[], start: number, count: number, callback: redis.ResCallbackT<any[]>): void;\r\n    osort(key: string, columns: string[], callback: redis.ResCallbackT<any[]>): void;\r\n}\r\n\r\n@di.factory(\"$db\", '$settings', '$config')\r\nclass DbClientFactory implements di.IFactory<DbClient>\r\n{\r\n    private port: number;\r\n    private host: string;\r\n    constructor(private settings: Settings, private config)\r\n    {\r\n        log(settings);\r\n        log(config);\r\n        this.port = settings('db.port') || config.port;\r\n        this.host = settings('db.host') || config.host;\r\n        if (!this.port && !this.host)\r\n            settings('db', { port: 6379, host: 'localhost' });\r\n        else if (!this.port)\r\n            settings('db.port', 6379);\r\n        else if (!this.host)\r\n            settings('db.host', 'localhost');\r\n\r\n\r\n    }\r\n\r\n\r\n    build(): DbClient\r\n    {\r\n        var db = <DbClient><any>redis.createClient(Number(this.settings('db.port')), this.settings('db.host'), {});\r\n        var quit = db.quit.bind(db);\r\n        var err = new Error();\r\n        var timeOut = setTimeout(function ()\r\n        {\r\n            if (!db._persistent)\r\n                log(err['stack']);\r\n            // quit();\r\n        }, 60000)\r\n        db.quit = function ()\r\n        {\r\n            clearTimeout(timeOut);\r\n            return quit.apply(null, arguments);\r\n        }\r\n        db.another = this.build;\r\n        db.on('error', function (error)\r\n        {\r\n            console.log(error);\r\n        })\r\n        db.osort = <any>function (key: string, columns: string[], sortKey: string, start: number, count: number, callback: redis.ResCallbackT<any[]>)\r\n        {\r\n\r\n            if (arguments.length < 5)\r\n            {\r\n                if ($.isFunction(sortKey))\r\n                {\r\n                    start = <any>sortKey;\r\n                    sortKey = null;\r\n                }\r\n                else if (!isNaN(<any>sortKey))\r\n                {\r\n                    callback = <any>count;\r\n                    count = start;\r\n                    start = <any>sortKey;\r\n                    sortKey = null;\r\n                }\r\n                if ($.isFunction(start))\r\n                {\r\n                    callback = <any>start;\r\n                    start = count = null;\r\n                }\r\n            }\r\n            var args: any[] = [key];\r\n            var direction = null;\r\n            if (sortKey)\r\n            {\r\n                var lastIndexOfSpace = sortKey.lastIndexOf(' ');\r\n                if (lastIndexOfSpace > -1)\r\n                {\r\n                    direction = sortKey.substring(lastIndexOfSpace + 1);\r\n                    sortKey = sortKey.substring(0, lastIndexOfSpace);\r\n                }\r\n                args.push('BY');\r\n                args.push(sortKey);\r\n            }\r\n            if (start !== null)\r\n            {\r\n                args.push('LIMIT');\r\n                args.push(start);\r\n                args.push(count);\r\n            }\r\n            for (var i in columns)\r\n            {\r\n                args.push('GET');\r\n                if (columns[i] == 'id')\r\n                    args.push('#');\r\n                else if (columns[i].charAt(0) != '*')\r\n                    args.push('*->' + columns[i]);\r\n                else\r\n                {\r\n                    args.push(columns[i]);\r\n                    columns[i] = columns[i].substring(columns[i].indexOf('->') + 2);\r\n                }\r\n            }\r\n            if (sortKey !== null)\r\n                args.push('ALPHA');\r\n            if (direction !== false)\r\n                args.push(direction);\r\n            log(args);\r\n            db.sort(args, function (error, replies)\r\n            {\r\n                var result = [];\r\n                if (error)\r\n                    return callback(error, null);\r\n\r\n                for (var i = 0; i < replies.length;)\r\n                {\r\n                    var item = {};\r\n                    for (var c in columns)\r\n                    {\r\n                        item[columns[c]] = replies[i++];\r\n                    }\r\n                    result.push(item);\r\n                }\r\n                callback(null, result);\r\n            });\r\n        };\r\n\r\n        return db;\r\n    }\r\n}"],"sourceRoot":"db/src/server"}